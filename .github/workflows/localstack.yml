name: Localstack Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  Test:
    runs-on: ubuntu-latest
    container: ubuntu:20.04
    
    services:
      localstack:
        image: localstack/localstack:latest
        ports:
          - "4566:4566"
          - "4571:4571"
        env:
          DEBUG: 1
          DATA_DIR: /tmp/localstack/data # Local directory for saving persistent data
          DEFAULT_REGION: us-east-1
          LAMBDA_EXECUTOR: local #running lambda from local dir
          LAMBDA_REMOTE_DOCKER: 0
          DOCKER_SOCK: unix:///var/run/docker.sock
          HOST_TMP_FOLDER: /tmp/localstack
          # LOCALSTACK_API_KEY: ${{ secrets.LOCALSTACK_API_KEY }} # only required for Pro
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          apt update && apt install git curl unzip build-essential -y
      - name: Install node
        run: |
          curl -fsSL https://deb.nodesource.com/setup_15.x | bash
          apt-get install -y nodejs
      - name: Setup Go environment
        uses: actions/setup-go@v3.0.0
        with:
          go-version: '>=1.17.0'
      - run: go version


      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: 1.1.7
          terraform_wrapper: false

      - name: Terraform workspace
        run: |
          (terraform workspace select dev || terraform workspace new dev )

      - name: Run the tests
        env:
          AWS_ACCESS_KEY_ID: "test"
          AWS_SECRET_ACCESS_KEY: "test"
          AWS_DEFAULT_REGION: "us-east-1"
        run: |
          cd ./test
          go test -v -run TestAwsInstance -timeout 30m